/*! modernizr 3.0.0-alpha.3 (Custom Build) | MIT *
 * http://v3.modernizr.com/download/#-cssmask !*/
!function (e, n, t) {
  function r(e) {
    var n = g.className,
        t = Modernizr._config.classPrefix || "";if (Modernizr._config.enableJSClass) {
      var r = new RegExp("(^|\\s)" + t + "no-js(\\s|$)");n = n.replace(r, "$1" + t + "js$2");
    }Modernizr._config.enableClasses && (n += " " + t + e.join(" " + t), g.className = n);
  }function o(e, n) {
    return typeof e === n;
  }function i() {
    var e, n, t, r, i, s, a;for (var f in C) {
      if (e = [], n = C[f], n.name && (e.push(n.name.toLowerCase()), n.options && n.options.aliases && n.options.aliases.length)) for (t = 0; t < n.options.aliases.length; t++) e.push(n.options.aliases[t].toLowerCase());for (r = o(n.fn, "function") ? n.fn() : n.fn, i = 0; i < e.length; i++) s = e[i], a = s.split("."), 1 === a.length ? Modernizr[a[0]] = r : (!Modernizr[a[0]] || Modernizr[a[0]] instanceof Boolean || (Modernizr[a[0]] = new Boolean(Modernizr[a[0]])), Modernizr[a[0]][a[1]] = r), h.push((r ? "" : "no-") + a.join("-"));
    }
  }function s(e, n) {
    return !!~("" + e).indexOf(n);
  }function a(e) {
    return e.replace(/([a-z])-([a-z])/g, function (e, n, t) {
      return n + t.toUpperCase();
    }).replace(/^-/, "");
  }function f(e, n) {
    return function () {
      return e.apply(n, arguments);
    };
  }function l(e, n, t) {
    var r;for (var i in e) if (e[i] in n) return t === !1 ? e[i] : (r = n[e[i]], o(r, "function") ? f(r, t || n) : r);return !1;
  }function u(e) {
    return e.replace(/([A-Z])/g, function (e, n) {
      return "-" + n.toLowerCase();
    }).replace(/^ms-/, "-ms-");
  }function d() {
    var e = n.body;return e || (e = b("body"), e.fake = !0), e;
  }function c(e, n, t, r) {
    var o,
        i,
        s,
        a,
        f = "modernizr",
        l = b("div"),
        u = d();if (parseInt(t, 10)) for (; t--;) s = b("div"), s.id = r ? r[t] : f + (t + 1), l.appendChild(s);return o = ["&#173;", '<style id="s', f, '">', e, "</style>"].join(""), l.id = f, (u.fake ? u : l).innerHTML += o, u.appendChild(l), u.fake && (u.style.background = "", u.style.overflow = "hidden", a = g.style.overflow, g.style.overflow = "hidden", g.appendChild(u)), i = n(l, e), u.fake ? (u.parentNode.removeChild(u), g.style.overflow = a, g.offsetHeight) : l.parentNode.removeChild(l), !!i;
  }function p(n, r) {
    var o = n.length;if ("CSS" in e && "supports" in e.CSS) {
      for (; o--;) if (e.CSS.supports(u(n[o]), r)) return !0;return !1;
    }if ("CSSSupportsRule" in e) {
      for (var i = []; o--;) i.push("(" + u(n[o]) + ":" + r + ")");return i = i.join(" or "), c("@supports (" + i + ") { #modernizr { position: absolute; } }", function (e) {
        return "absolute" == getComputedStyle(e, null).position;
      });
    }return t;
  }function m(e, n, r, i) {
    function f() {
      u && (delete E.style, delete E.modElem);
    }if (i = o(i, "undefined") ? !1 : i, !o(r, "undefined")) {
      var l = p(e, r);if (!o(l, "undefined")) return l;
    }var u, d, c, m, v;for (E.style || (u = !0, E.modElem = b("modernizr"), E.style = E.modElem.style), c = e.length, d = 0; c > d; d++) if (m = e[d], v = E.style[m], s(m, "-") && (m = a(m)), E.style[m] !== t) {
      if (i || o(r, "undefined")) return f(), "pfx" == n ? m : !0;try {
        E.style[m] = r;
      } catch (y) {}if (E.style[m] != v) return f(), "pfx" == n ? m : !0;
    }return f(), !1;
  }function v(e, n, t, r, i) {
    var s = e.charAt(0).toUpperCase() + e.slice(1),
        a = (e + " " + S.join(s + " ") + s).split(" ");return o(n, "string") || o(n, "undefined") ? m(a, n, r, i) : (a = (e + " " + x.join(s + " ") + s).split(" "), l(a, n, t));
  }function y(e, n, r) {
    return v(e, t, t, n, r);
  }var h = [],
      g = n.documentElement,
      C = [],
      _ = { _version: "3.0.0-alpha.3", _config: { classPrefix: "", enableClasses: !0, enableJSClass: !0, usePrefixes: !0 }, _q: [], on: function (e, n) {
      var t = this;setTimeout(function () {
        n(t[e]);
      }, 0);
    }, addTest: function (e, n, t) {
      C.push({ name: e, fn: n, options: t });
    }, addAsyncTest: function (e) {
      C.push({ name: null, fn: e });
    } },
      Modernizr = function () {};Modernizr.prototype = _, Modernizr = new Modernizr();var w = "Moz O ms Webkit",
      S = _._config.usePrefixes ? w.split(" ") : [];_._cssomPrefixes = S;var x = _._config.usePrefixes ? w.toLowerCase().split(" ") : [];_._domPrefixes = x;var b = function () {
    return "function" != typeof n.createElement ? n.createElement(arguments[0]) : n.createElement.apply(n, arguments);
  },
      z = { elem: b("modernizr") };Modernizr._q.push(function () {
    delete z.elem;
  });var E = { style: z.elem.style };Modernizr._q.unshift(function () {
    delete E.style;
  }), _.testAllProps = v, _.testAllProps = y, Modernizr.addTest("cssmask", y("maskRepeat", "repeat-x", !0)), i(), r(h), delete _.addTest, delete _.addAsyncTest;for (var P = 0; P < Modernizr._q.length; P++) Modernizr._q[P]();e.Modernizr = Modernizr;
}(window, document);
console.log('Follow the dev of this site at https://github.com/xak/zackfrazier');

setTimeout(function () {
  document.getElementById('main').className = 'ready';
}, 1500);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJlIiwibiIsInQiLCJyIiwiZyIsImNsYXNzTmFtZSIsIk1vZGVybml6ciIsIl9jb25maWciLCJjbGFzc1ByZWZpeCIsImVuYWJsZUpTQ2xhc3MiLCJSZWdFeHAiLCJyZXBsYWNlIiwiZW5hYmxlQ2xhc3NlcyIsImpvaW4iLCJvIiwiaSIsInMiLCJhIiwiZiIsIkMiLCJuYW1lIiwicHVzaCIsInRvTG93ZXJDYXNlIiwib3B0aW9ucyIsImFsaWFzZXMiLCJsZW5ndGgiLCJmbiIsInNwbGl0IiwiQm9vbGVhbiIsImgiLCJpbmRleE9mIiwidG9VcHBlckNhc2UiLCJhcHBseSIsImFyZ3VtZW50cyIsImwiLCJ1IiwiZCIsImJvZHkiLCJiIiwiZmFrZSIsImMiLCJwYXJzZUludCIsImlkIiwiYXBwZW5kQ2hpbGQiLCJpbm5lckhUTUwiLCJzdHlsZSIsImJhY2tncm91bmQiLCJvdmVyZmxvdyIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsIm9mZnNldEhlaWdodCIsInAiLCJDU1MiLCJzdXBwb3J0cyIsImdldENvbXB1dGVkU3R5bGUiLCJwb3NpdGlvbiIsIm0iLCJFIiwibW9kRWxlbSIsInYiLCJ5IiwiY2hhckF0Iiwic2xpY2UiLCJTIiwieCIsImRvY3VtZW50RWxlbWVudCIsIl8iLCJfdmVyc2lvbiIsInVzZVByZWZpeGVzIiwiX3EiLCJvbiIsInNldFRpbWVvdXQiLCJhZGRUZXN0IiwiYWRkQXN5bmNUZXN0IiwicHJvdG90eXBlIiwidyIsIl9jc3NvbVByZWZpeGVzIiwiX2RvbVByZWZpeGVzIiwiY3JlYXRlRWxlbWVudCIsInoiLCJlbGVtIiwidW5zaGlmdCIsInRlc3RBbGxQcm9wcyIsIlAiLCJ3aW5kb3ciLCJkb2N1bWVudCIsImNvbnNvbGUiLCJsb2ciLCJnZXRFbGVtZW50QnlJZCJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsQ0FBQyxVQUFTQSxDQUFULEVBQVdDLENBQVgsRUFBYUMsQ0FBYixFQUFlO0FBQUMsV0FB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QTNCLEVBQWtDMEQsR0FBbEMsRUFBc0M3RSxVQUFVK0QsRUFBVixDQUFhYyxDQUFiLElBQWtCbkYsRUFBRU0sU0FBRixHQUFZQSxTQUFaO0FBQXNCLENBQW55SCxDQUFveUg4RSxNQUFweUgsRUFBMnlIQyxRQUEzeUgsQ0FBRDtBQUNBQyxRQUFRQyxHQUFSLENBQVksbUVBQVo7O0FBRUFoQixXQUFXLFlBQVk7QUFDdEJjLFdBQVNHLGNBQVQsQ0FBd0IsTUFBeEIsRUFBZ0NuRixTQUFoQyxHQUE0QyxPQUE1QztBQUNBLENBRkQsRUFFRSxJQUZGIiwiZmlsZSI6ImFwcC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qISBtb2Rlcm5penIgMy4wLjAtYWxwaGEuMyAoQ3VzdG9tIEJ1aWxkKSB8IE1JVCAqXG4gKiBodHRwOi8vdjMubW9kZXJuaXpyLmNvbS9kb3dubG9hZC8jLWNzc21hc2sgISovXG4hZnVuY3Rpb24oZSxuLHQpe2Z1bmN0aW9uIHIoZSl7dmFyIG49Zy5jbGFzc05hbWUsdD1Nb2Rlcm5penIuX2NvbmZpZy5jbGFzc1ByZWZpeHx8XCJcIjtpZihNb2Rlcm5penIuX2NvbmZpZy5lbmFibGVKU0NsYXNzKXt2YXIgcj1uZXcgUmVnRXhwKFwiKF58XFxcXHMpXCIrdCtcIm5vLWpzKFxcXFxzfCQpXCIpO249bi5yZXBsYWNlKHIsXCIkMVwiK3QrXCJqcyQyXCIpfU1vZGVybml6ci5fY29uZmlnLmVuYWJsZUNsYXNzZXMmJihuKz1cIiBcIit0K2Uuam9pbihcIiBcIit0KSxnLmNsYXNzTmFtZT1uKX1mdW5jdGlvbiBvKGUsbil7cmV0dXJuIHR5cGVvZiBlPT09bn1mdW5jdGlvbiBpKCl7dmFyIGUsbix0LHIsaSxzLGE7Zm9yKHZhciBmIGluIEMpe2lmKGU9W10sbj1DW2ZdLG4ubmFtZSYmKGUucHVzaChuLm5hbWUudG9Mb3dlckNhc2UoKSksbi5vcHRpb25zJiZuLm9wdGlvbnMuYWxpYXNlcyYmbi5vcHRpb25zLmFsaWFzZXMubGVuZ3RoKSlmb3IodD0wO3Q8bi5vcHRpb25zLmFsaWFzZXMubGVuZ3RoO3QrKyllLnB1c2gobi5vcHRpb25zLmFsaWFzZXNbdF0udG9Mb3dlckNhc2UoKSk7Zm9yKHI9byhuLmZuLFwiZnVuY3Rpb25cIik/bi5mbigpOm4uZm4saT0wO2k8ZS5sZW5ndGg7aSsrKXM9ZVtpXSxhPXMuc3BsaXQoXCIuXCIpLDE9PT1hLmxlbmd0aD9Nb2Rlcm5penJbYVswXV09cjooIU1vZGVybml6clthWzBdXXx8TW9kZXJuaXpyW2FbMF1daW5zdGFuY2VvZiBCb29sZWFufHwoTW9kZXJuaXpyW2FbMF1dPW5ldyBCb29sZWFuKE1vZGVybml6clthWzBdXSkpLE1vZGVybml6clthWzBdXVthWzFdXT1yKSxoLnB1c2goKHI/XCJcIjpcIm5vLVwiKSthLmpvaW4oXCItXCIpKX19ZnVuY3Rpb24gcyhlLG4pe3JldHVybiEhfihcIlwiK2UpLmluZGV4T2Yobil9ZnVuY3Rpb24gYShlKXtyZXR1cm4gZS5yZXBsYWNlKC8oW2Etel0pLShbYS16XSkvZyxmdW5jdGlvbihlLG4sdCl7cmV0dXJuIG4rdC50b1VwcGVyQ2FzZSgpfSkucmVwbGFjZSgvXi0vLFwiXCIpfWZ1bmN0aW9uIGYoZSxuKXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gZS5hcHBseShuLGFyZ3VtZW50cyl9fWZ1bmN0aW9uIGwoZSxuLHQpe3ZhciByO2Zvcih2YXIgaSBpbiBlKWlmKGVbaV1pbiBuKXJldHVybiB0PT09ITE/ZVtpXToocj1uW2VbaV1dLG8ocixcImZ1bmN0aW9uXCIpP2Yocix0fHxuKTpyKTtyZXR1cm4hMX1mdW5jdGlvbiB1KGUpe3JldHVybiBlLnJlcGxhY2UoLyhbQS1aXSkvZyxmdW5jdGlvbihlLG4pe3JldHVyblwiLVwiK24udG9Mb3dlckNhc2UoKX0pLnJlcGxhY2UoL15tcy0vLFwiLW1zLVwiKX1mdW5jdGlvbiBkKCl7dmFyIGU9bi5ib2R5O3JldHVybiBlfHwoZT1iKFwiYm9keVwiKSxlLmZha2U9ITApLGV9ZnVuY3Rpb24gYyhlLG4sdCxyKXt2YXIgbyxpLHMsYSxmPVwibW9kZXJuaXpyXCIsbD1iKFwiZGl2XCIpLHU9ZCgpO2lmKHBhcnNlSW50KHQsMTApKWZvcig7dC0tOylzPWIoXCJkaXZcIikscy5pZD1yP3JbdF06ZisodCsxKSxsLmFwcGVuZENoaWxkKHMpO3JldHVybiBvPVtcIiYjMTczO1wiLCc8c3R5bGUgaWQ9XCJzJyxmLCdcIj4nLGUsXCI8L3N0eWxlPlwiXS5qb2luKFwiXCIpLGwuaWQ9ZiwodS5mYWtlP3U6bCkuaW5uZXJIVE1MKz1vLHUuYXBwZW5kQ2hpbGQobCksdS5mYWtlJiYodS5zdHlsZS5iYWNrZ3JvdW5kPVwiXCIsdS5zdHlsZS5vdmVyZmxvdz1cImhpZGRlblwiLGE9Zy5zdHlsZS5vdmVyZmxvdyxnLnN0eWxlLm92ZXJmbG93PVwiaGlkZGVuXCIsZy5hcHBlbmRDaGlsZCh1KSksaT1uKGwsZSksdS5mYWtlPyh1LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodSksZy5zdHlsZS5vdmVyZmxvdz1hLGcub2Zmc2V0SGVpZ2h0KTpsLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQobCksISFpfWZ1bmN0aW9uIHAobixyKXt2YXIgbz1uLmxlbmd0aDtpZihcIkNTU1wiaW4gZSYmXCJzdXBwb3J0c1wiaW4gZS5DU1Mpe2Zvcig7by0tOylpZihlLkNTUy5zdXBwb3J0cyh1KG5bb10pLHIpKXJldHVybiEwO3JldHVybiExfWlmKFwiQ1NTU3VwcG9ydHNSdWxlXCJpbiBlKXtmb3IodmFyIGk9W107by0tOylpLnB1c2goXCIoXCIrdShuW29dKStcIjpcIityK1wiKVwiKTtyZXR1cm4gaT1pLmpvaW4oXCIgb3IgXCIpLGMoXCJAc3VwcG9ydHMgKFwiK2krXCIpIHsgI21vZGVybml6ciB7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgfSB9XCIsZnVuY3Rpb24oZSl7cmV0dXJuXCJhYnNvbHV0ZVwiPT1nZXRDb21wdXRlZFN0eWxlKGUsbnVsbCkucG9zaXRpb259KX1yZXR1cm4gdH1mdW5jdGlvbiBtKGUsbixyLGkpe2Z1bmN0aW9uIGYoKXt1JiYoZGVsZXRlIEUuc3R5bGUsZGVsZXRlIEUubW9kRWxlbSl9aWYoaT1vKGksXCJ1bmRlZmluZWRcIik/ITE6aSwhbyhyLFwidW5kZWZpbmVkXCIpKXt2YXIgbD1wKGUscik7aWYoIW8obCxcInVuZGVmaW5lZFwiKSlyZXR1cm4gbH12YXIgdSxkLGMsbSx2O2ZvcihFLnN0eWxlfHwodT0hMCxFLm1vZEVsZW09YihcIm1vZGVybml6clwiKSxFLnN0eWxlPUUubW9kRWxlbS5zdHlsZSksYz1lLmxlbmd0aCxkPTA7Yz5kO2QrKylpZihtPWVbZF0sdj1FLnN0eWxlW21dLHMobSxcIi1cIikmJihtPWEobSkpLEUuc3R5bGVbbV0hPT10KXtpZihpfHxvKHIsXCJ1bmRlZmluZWRcIikpcmV0dXJuIGYoKSxcInBmeFwiPT1uP206ITA7dHJ5e0Uuc3R5bGVbbV09cn1jYXRjaCh5KXt9aWYoRS5zdHlsZVttXSE9dilyZXR1cm4gZigpLFwicGZ4XCI9PW4/bTohMH1yZXR1cm4gZigpLCExfWZ1bmN0aW9uIHYoZSxuLHQscixpKXt2YXIgcz1lLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK2Uuc2xpY2UoMSksYT0oZStcIiBcIitTLmpvaW4ocytcIiBcIikrcykuc3BsaXQoXCIgXCIpO3JldHVybiBvKG4sXCJzdHJpbmdcIil8fG8obixcInVuZGVmaW5lZFwiKT9tKGEsbixyLGkpOihhPShlK1wiIFwiK3guam9pbihzK1wiIFwiKStzKS5zcGxpdChcIiBcIiksbChhLG4sdCkpfWZ1bmN0aW9uIHkoZSxuLHIpe3JldHVybiB2KGUsdCx0LG4scil9dmFyIGg9W10sZz1uLmRvY3VtZW50RWxlbWVudCxDPVtdLF89e192ZXJzaW9uOlwiMy4wLjAtYWxwaGEuM1wiLF9jb25maWc6e2NsYXNzUHJlZml4OlwiXCIsZW5hYmxlQ2xhc3NlczohMCxlbmFibGVKU0NsYXNzOiEwLHVzZVByZWZpeGVzOiEwfSxfcTpbXSxvbjpmdW5jdGlvbihlLG4pe3ZhciB0PXRoaXM7c2V0VGltZW91dChmdW5jdGlvbigpe24odFtlXSl9LDApfSxhZGRUZXN0OmZ1bmN0aW9uKGUsbix0KXtDLnB1c2goe25hbWU6ZSxmbjpuLG9wdGlvbnM6dH0pfSxhZGRBc3luY1Rlc3Q6ZnVuY3Rpb24oZSl7Qy5wdXNoKHtuYW1lOm51bGwsZm46ZX0pfX0sTW9kZXJuaXpyPWZ1bmN0aW9uKCl7fTtNb2Rlcm5penIucHJvdG90eXBlPV8sTW9kZXJuaXpyPW5ldyBNb2Rlcm5penI7dmFyIHc9XCJNb3ogTyBtcyBXZWJraXRcIixTPV8uX2NvbmZpZy51c2VQcmVmaXhlcz93LnNwbGl0KFwiIFwiKTpbXTtfLl9jc3NvbVByZWZpeGVzPVM7dmFyIHg9Xy5fY29uZmlnLnVzZVByZWZpeGVzP3cudG9Mb3dlckNhc2UoKS5zcGxpdChcIiBcIik6W107Xy5fZG9tUHJlZml4ZXM9eDt2YXIgYj1mdW5jdGlvbigpe3JldHVyblwiZnVuY3Rpb25cIiE9dHlwZW9mIG4uY3JlYXRlRWxlbWVudD9uLmNyZWF0ZUVsZW1lbnQoYXJndW1lbnRzWzBdKTpuLmNyZWF0ZUVsZW1lbnQuYXBwbHkobixhcmd1bWVudHMpfSx6PXtlbGVtOmIoXCJtb2Rlcm5penJcIil9O01vZGVybml6ci5fcS5wdXNoKGZ1bmN0aW9uKCl7ZGVsZXRlIHouZWxlbX0pO3ZhciBFPXtzdHlsZTp6LmVsZW0uc3R5bGV9O01vZGVybml6ci5fcS51bnNoaWZ0KGZ1bmN0aW9uKCl7ZGVsZXRlIEUuc3R5bGV9KSxfLnRlc3RBbGxQcm9wcz12LF8udGVzdEFsbFByb3BzPXksTW9kZXJuaXpyLmFkZFRlc3QoXCJjc3NtYXNrXCIseShcIm1hc2tSZXBlYXRcIixcInJlcGVhdC14XCIsITApKSxpKCkscihoKSxkZWxldGUgXy5hZGRUZXN0LGRlbGV0ZSBfLmFkZEFzeW5jVGVzdDtmb3IodmFyIFA9MDtQPE1vZGVybml6ci5fcS5sZW5ndGg7UCsrKU1vZGVybml6ci5fcVtQXSgpO2UuTW9kZXJuaXpyPU1vZGVybml6cn0od2luZG93LGRvY3VtZW50KTtcbmNvbnNvbGUubG9nKCdGb2xsb3cgdGhlIGRldiBvZiB0aGlzIHNpdGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL3hhay96YWNrZnJhemllcicpO1xuXG5zZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcblx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21haW4nKS5jbGFzc05hbWUgPSAncmVhZHknO1xufSwxNTAwKVxuXG5cblxuXG5cbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==